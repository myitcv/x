# Simple test that ensures the go wrapper is logging correctly

# Check go command itself from testscript
go env
stdout GOARCH="$GOARCH"
stderr 'go env'

# Check go command when called from within generator
gg -p 1 -trace ./...
stdout ${WORK@R}\Q/go.mod\E
cmpenv stderr trace1

-- go.mod --
module mod.com

-- p1/p1.go --
package p1

//go:generate gobin -m -run mod.com/p2

-- p2/p2.go --
package main

import (
	"os"
	"os/exec"
)

func main() {
	cmd := exec.Command("go", "env", "GOMOD")
	cmd.Stdout = os.Stdout
	cmd.Stderr = os.Stderr
	cmd.Stdin = os.Stdin

	if err := cmd.Run(); err != nil {
		panic(err)
	}
}
-- trace1 --
go list -deps -test -json ./...
hash {Pkg: mod.com/p2 [G]}
hash gobinModDep gobinModDep: mod.com/p2 (mod.com/p2)
generate {Pkg: mod.com/p1 [G]}
run generator: gobin -m -run mod.com/p2
go env GOMOD
ran generator: gobin -m -run mod.com/p2
hash {Pkg: mod.com/p1 [G]}
