// Code generated by reactGen. DO NOT EDIT.

package main

import "myitcv.io/react"

type OuterElem struct {
	react.Element
}

func buildOuter(cd react.ComponentDef) react.Component {
	return OuterDef{ComponentDef: cd}
}

func buildOuterElem(children ...react.Element) *OuterElem {
	return &OuterElem{
		Element: react.CreateElement(buildOuter, nil, children...),
	}
}

func (o OuterDef) RendersElement() react.Element {
	return o.Render()
}

// SetState is an auto-generated proxy proxy to update the state for the
// Outer component.  SetState does not immediately mutate o.State()
// but creates a pending state transition.
func (o OuterDef) SetState(state OuterState) {
	o.ComponentDef.SetState(state)
}

// State is an auto-generated proxy to return the current state in use for the
// render of the Outer component
func (o OuterDef) State() OuterState {
	return o.ComponentDef.State().(OuterState)
}

// IsState is an auto-generated definition so that OuterState implements
// the myitcv.io/react.State interface.
func (o OuterState) IsState() {}

var _ react.State = OuterState{}

// GetInitialStateIntf is an auto-generated proxy to GetInitialState
func (o OuterDef) GetInitialStateIntf() react.State {
	return OuterState{}
}

func (o OuterState) EqualsIntf(val react.State) bool {
	return o == val.(OuterState)
}
