// Code generated by sortGen. DO NOT EDIT.

package main

import "sort"
import "myitcv.io/sorter"

import "myitcv.io/react/examples/sites/globalstate/model"

func sortPeopleKeysByName(vs *model.People) *model.People {
	theVs := vs.AsMutable()

	sort.Sort(&sorter.Wrapper{
		LenFunc: func() int {
			return theVs.Len()
		},
		LessFunc: func(i, j int) bool {
			return bool(orderPeopleKeysByName(theVs, i, j))
		},
		SwapFunc: func(i, j int) {
			jPrev := theVs.Get(j)
			iPrev := theVs.Get(i)

			theVs.Set(j, iPrev)
			theVs.Set(i, jPrev)
		},
	})

	return theVs.AsImmutable(vs)
}
func stableSortPeopleKeysByName(vs *model.People) *model.People {
	theVs := vs.AsMutable()

	sort.Stable(&sorter.Wrapper{
		LenFunc: func() int {
			return theVs.Len()
		},
		LessFunc: func(i, j int) bool {
			return bool(orderPeopleKeysByName(theVs, i, j))
		},
		SwapFunc: func(i, j int) {
			jPrev := theVs.Get(j)
			iPrev := theVs.Get(i)

			theVs.Set(j, iPrev)
			theVs.Set(i, jPrev)
		},
	})

	return theVs.AsImmutable(vs)
}
