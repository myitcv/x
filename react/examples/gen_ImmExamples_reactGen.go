// Code generated by reactGen. DO NOT EDIT.

package examples

import "myitcv.io/react"

type ImmExamplesElem struct {
	react.Element
}

func buildImmExamples(cd react.ComponentDef) react.Component {
	return ImmExamplesDef{ComponentDef: cd}
}

func buildImmExamplesElem(children ...react.Element) *ImmExamplesElem {
	return &ImmExamplesElem{
		Element: react.CreateElement(buildImmExamples, nil, children...),
	}
}

func (i ImmExamplesDef) RendersElement() react.Element {
	return i.Render()
}

// SetState is an auto-generated proxy proxy to update the state for the
// ImmExamples component.  SetState does not immediately mutate i.State()
// but creates a pending state transition.
func (i ImmExamplesDef) SetState(state ImmExamplesState) {
	i.ComponentDef.SetState(state)
}

// State is an auto-generated proxy to return the current state in use for the
// render of the ImmExamples component
func (i ImmExamplesDef) State() ImmExamplesState {
	return i.ComponentDef.State().(ImmExamplesState)
}

// IsState is an auto-generated definition so that ImmExamplesState implements
// the myitcv.io/react.State interface.
func (i ImmExamplesState) IsState() {}

var _ react.State = ImmExamplesState{}

// GetInitialStateIntf is an auto-generated proxy to GetInitialState
func (i ImmExamplesDef) GetInitialStateIntf() react.State {
	return i.GetInitialState()
}

func (i ImmExamplesState) EqualsIntf(val react.State) bool {
	return i == val.(ImmExamplesState)
}
