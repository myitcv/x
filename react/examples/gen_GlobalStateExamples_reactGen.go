// Code generated by reactGen. DO NOT EDIT.

package examples

import "myitcv.io/react"

type GlobalStateExamplesElem struct {
	react.Element
}

func buildGlobalStateExamples(cd react.ComponentDef) react.Component {
	return GlobalStateExamplesDef{ComponentDef: cd}
}

func buildGlobalStateExamplesElem(children ...react.Element) *GlobalStateExamplesElem {
	return &GlobalStateExamplesElem{
		Element: react.CreateElement(buildGlobalStateExamples, nil, children...),
	}
}

func (g GlobalStateExamplesDef) RendersElement() react.Element {
	return g.Render()
}

// SetState is an auto-generated proxy proxy to update the state for the
// GlobalStateExamples component.  SetState does not immediately mutate g.State()
// but creates a pending state transition.
func (g GlobalStateExamplesDef) SetState(state GlobalStateExamplesState) {
	g.ComponentDef.SetState(state)
}

// State is an auto-generated proxy to return the current state in use for the
// render of the GlobalStateExamples component
func (g GlobalStateExamplesDef) State() GlobalStateExamplesState {
	return g.ComponentDef.State().(GlobalStateExamplesState)
}

// IsState is an auto-generated definition so that GlobalStateExamplesState implements
// the myitcv.io/react.State interface.
func (g GlobalStateExamplesState) IsState() {}

var _ react.State = GlobalStateExamplesState{}

// GetInitialStateIntf is an auto-generated proxy to GetInitialState
func (g GlobalStateExamplesDef) GetInitialStateIntf() react.State {
	return g.GetInitialState()
}

func (g GlobalStateExamplesState) EqualsIntf(val react.State) bool {
	return g == val.(GlobalStateExamplesState)
}
